<?php

// -----------------------------------------
// semplice
// admin/atts/partials/mobile/blogposts.php
// -----------------------------------------

// default width
$default_width = array('lg' => 4, 'md' => 6, 'sm' => 12, 'xs' => 12);

// width
$thumbnail = $this->width;
$thumbnail['full'] = 'Fullscreen';

// type
if($args['type'] == 'layout') {
	$options = array(
		'title'  	 => $title . ' Options',
		'break'		 => '2,1,2,2,2',
		'class'		 => 'mobile-option mobile-option-' .$breakpoint,
		'width_' . $breakpoint => array(
			'data-input-type' => 'select-box',
			'title'		 => 'Columns per row',
			'size'		 => 'span2',
			'class'			=> 'editor-listen',
			'data-target'=> '.is-content',
			'default' 	 => $default_width[$breakpoint],
			'style-class'	=> 'ov-blog-grid-columns',
			'data-handler'  => 'save',
			'responsive'	=> true,
			'responsive-default' => true,
			'select-box-values' => array(
				'12' => '1',
				'6' => '2',
				'4' => '3',
				'3' => '4',
				'2' => '6',
			),
		),
		'gutter_columns_' . $breakpoint => array(
			'title'			=> 'Column gutter',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 30,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'	=> 'save',
			'help'			=> 'Horizontal space between the columns.',
			'style-class'	=> 'ov-blog-grid-columns',
			'responsive'	=> true,
		),
		'gutter_list_' . $breakpoint => array(
			'title'			=> 'List gutter',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 30,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'	=> 'save',
			'help'			=> 'Horizontal space between the columns.',
			'style-class'	=> 'ov-blog-grid-list',
			'responsive'	=> true,
		),
		'fw_thumbnail_width_' . $breakpoint => array(
			'data-input-type' => 'select-box',
			'title'		 => 'Thumbnail Width',
			'size'		 => 'span2',
			'class'			=> 'editor-listen',
			'data-target'=> '.is-content',
			'default' 	 => '12',
			'style-class'	=> 'ov-blog-grid-fullwidth fw-thumb-width',
			'data-handler'  => 'save',
			'help' => 'Setting the width to \'Fullscreen\' will scale your thumbnail edge to edge in the browser and ignore any gutters or paddings. (both for the section and grid)',
			'responsive'	=> true,
			'responsive-default' => true,
			'select-box-values' => $thumbnail
		),
		'fw_title_width_' . $breakpoint => array(
			'data-input-type' => 'select-box',
			'title'		 => 'Title Width',
			'size'		 => 'span2',
			'class'			=> 'editor-listen',
			'data-target'=> '.is-content',
			'default' 	 => '12',
			'style-class'	=> 'ov-blog-grid-fullwidth',
			'data-handler'  => 'save',
			'select-box-values' => $this->width,
			'responsive'	=> true,
			'responsive-default' => true,
		),
		'fw_content_width_' . $breakpoint => array(
			'data-input-type' => 'select-box',
			'title'		 => 'Content Width',
			'size'		 => 'span2',
			'class'			=> 'editor-listen',
			'data-target'=> '.is-content',
			'default' 	 => '12',
			'style-class'	=> 'ov-blog-grid-fullwidth',
			'data-handler'  => 'save',
			'select-box-values' => $this->width,
			'responsive'	=> true,
			'responsive-default' => true,
		),
		'fw_meta_width_' . $breakpoint => array(
			'data-input-type' => 'select-box',
			'title'		 => 'Meta Width',
			'size'		 => 'span2',
			'class'			=> 'editor-listen',
			'data-target'=> '.is-content',
			'default' 	 => '12',
			'style-class'	=> 'ov-blog-grid-fullwidth',
			'data-handler'  => 'save',
			'select-box-values' => $this->width,
			'responsive'	=> true,
			'responsive-default' => true,
		),
		'outer_padding_' . $breakpoint => array(
			'title'			=> 'Outer padding',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'style-class'	=> 'wp-tpl-singlepost',
			'responsive'	=> true,
		),
		'inner_padding_' . $breakpoint => array(
			'title'			=> 'Inner padding',
			'help'			=> 'Inner padding has no effect for the full width layout.',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'style-class'	=> 'wp-tpl-singlepost',
			'responsive'	=> true,
		),
		'bottom_spacing_' . $breakpoint => array(
			'title'			=> 'Bottom Spacing',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'help'				=> 'Set this to 0 if you use a seperator.',
			'style-class'	=> 'wp-tpl-singlepost',
			'responsive'	=> true,
		),
	);
} else if($args['type'] == 'thumbnail') {
	$options = array(
		'title'  	 => 'Post Thumbnail',
		'break'		 => '1',
		'class'		 => 'mobile-option mobile-option-' .$breakpoint,
		'style-class' => 'ep-collapsed',
		'thumbnail_visibility_' . $breakpoint => array(
			'data-input-type' 			=> 'switch',
			'switch-type'				=> 'twoway',
			'title'		 				=> 'Visibility',
			'size'		 				=> 'span4',
			'class'						=> 'editor-listen',
			'data-handler'				=> 'save',
			'default' 	 				=> 'block',
			'responsive'				=> true,
			'switch-values' => array(
				'block'		=> 'Visible',
				'none'  	=> 'Hidden',
			),
		),
	);
} else if($args['type'] == 'seperator') {
	$options = array(
		'title'  	 => 'Post Seperator',
		'break'		 => '1,2',
		'data-hide-mobile' => true,
		'class'		 => 'mobile-option mobile-option-' .$breakpoint,
		'style-class' => 'ep-collapsed wp-tpl-singlepost',
		'post_seperator_height_' . $breakpoint => array(
			'title'			=> 'Height',
			'size'			=> 'span4',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 1,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'responsive'		=> true,
		),
		'post_seperator_top_spacing_' . $breakpoint => array(
			'title'			=> 'Top Spacing',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 26,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'responsive'		=> true,
		),
		'post_seperator_bottom_spacing_' . $breakpoint => array(
			'title'			=> 'Bottom Spacing',
			'size'			=> 'span2',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'default'		=> 26,
			'min'			=> 0,
			'max'			=> 999,
			'class'				=> 'editor-listen',
			'data-handler'		=> 'save',
			'data-has-unit'		=> true,
			'responsive'		=> true,
		),
	);
} else if($args['type'] == 'meta') {
	$options = array(
		'title'  	 => 'Meta Options',
		'break'		 => '1,2,2',
		'style-class' => 'ep-collapsed',
		'class'		 => 'mobile-option mobile-option-' .$breakpoint,
		'meta-notice' => array(
			'data-input-type' => 'notice',
			'hide-title' => true,
			'size'		 => 'span4',
			'class'     	=> 'ep-notice',
			'data-handler'  => 'mailchimp',
			'default'    => 'If a meta setting is set to <b>hidden</b> on <b>\'Desktop Wide\'</b> the breakpoint setting will be ignored and it will be hidden on all breakpoints. Same for the global meta visibility.',
			'notice-type'=> 'warning',
			'responsive' => true,
		),
		'date_visibility_' . $breakpoint => array(
			'data-input-type' 			=> 'switch',
			'switch-type'				=> 'twoway',
			'title'		 				=> 'Show Date',
			'size'		 				=> 'span2',
			'class'						=> 'editor-listen',
			'data-handler'				=> 'save',
			'default' 	 				=> 'visible',
			'responsive'				=> true,
			'switch-values' => array(
				'visible'	=> 'Yes',
				'hidden'  	=> 'No',
			),
		),
		'comment_visibility_' . $breakpoint => array(
			'data-input-type' 			=> 'switch',
			'switch-type'				=> 'twoway',
			'title'		 				=> 'Show Comments',
			'size'		 				=> 'span2',
			'class'						=> 'editor-listen',
			'data-handler'				=> 'save',
			'default' 	 				=> 'hidden',
			'responsive'		=> true,
			'switch-values' => array(
				'visible'	=> 'Yes',
				'hidden'  	=> 'No',
			),
		),
		'readtime_visibility_' . $breakpoint => array(
			'data-input-type' 			=> 'switch',
			'switch-type'				=> 'twoway',
			'title'		 				=> 'Show Readtime',
			'size'		 				=> 'span2',
			'class'						=> 'editor-listen',
			'data-handler'				=> 'save',
			'default' 	 				=> 'hidden',
			'responsive'		=> true,
			'switch-values' => array(
				'visible'	=> 'Yes',
				'hidden'  	=> 'No',
			),
		)
	);
}