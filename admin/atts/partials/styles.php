<?php

// -----------------------------------------
// semplice
// admin/atts/partials/styles.php
// -----------------------------------------

if($args['type'] == 'padding') {
	$options = array(
		'title' => 'Spacing',
		'style-class' => 'bp-4',
		$args['prefix'] . 'padding-top' => array(
			'title'			=> 'Top',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'padding-right' => array(
			'title'			=> 'Right',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'padding-bottom' => array(
			'title'			=> 'Bottom',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'padding-left' => array(
			'title'			=> 'Left',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
	);
	if($args['target'] == '.container') {
		unset($options['container_padding-left']);
		unset($options['container_padding-right']);
	}
} else if($args['type'] == 'margin') {
	$options = array(
		'title' => 'Offset',
		'style-class' => 'ep-collapsed',
		$args['prefix'] . 'margin-top' => array(
			'title'			=> 'Top',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-negative' => true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'margin-right' => array(
			'title'			=> 'Right',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-negative' => true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'margin-bottom' => array(
			'title'			=> 'Bottom',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-negative' => true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
		$args['prefix'] . 'margin-left' => array(
			'title'			=> 'Left',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-negative' => true,
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%,vw,vh'
		),
	);
} else if($args['type'] == 'background-image') {
	$options = array(
		'title'		   => 'Background Image',
		'hide-title'   => true,
		'break'		   => '2',
		'style-class'		=> 'ov-bg-type-img bg-img-upload',
		'data-hide-mobile' => true,
		'has-media'    => 'styles,background-image',
		$args['prefix'] . 'background-image' => array(
			'title'			=> 'Image',
			'hide-title'	=> true,
			'size'			=> 'span2',
			'data-input-type'	=> 'editor-image-upload',
			'data-target'	=> $args['target'],
			'default'		=> '',
			'style-class'		=> 'ce-dropzone',
			'data-upload'	=> 'stylesBackground',
		),
		$args['prefix'] . 'background-size' => array(
			'title'			=> 'Options',
			'hide-title'	=> true,
			'size'			=> 'span2',
			'stack'			=> 'vertical-start',
			'data-input-type'    => 'select-box',
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'data-target'	=> $args['target'],
			'default'		=> 'auto',
			'select-box-values' => array(
				'auto'		=> 'No Scale',
				'cover' 	=> 'Cover (full width)',
				'contain'	=> 'Contain'
			),
		),
		$args['prefix'] . 'background-position' => array(
			'title'			=> 'Position',
			'hide-title'	=> true,
			'size'			=> 'span2',
			'stack'			=> 'vertical',
			'data-input-type'    => 'select-box',
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'data-target'	=> $args['target'],
			'default'		=> '0% 0%',
			'select-box-values' => array(
				'0% 0%' 	=> 'Top Left',
				'50% 0%' 	=> 'Top Center',
				'100% 0%' 	=> 'Top Right',
				'0% 50%' 	=> 'Middle Left',
				'50% 50%' 	=> 'Middle Center',
				'100% 50%' 	=> 'Middle Right',
				'0% 100%' 	=> 'Bottom Left',
				'50% 100%' 	=> 'Bottom Center',
				'100% 100%' => 'Bottom Right'
			),
		),
		$args['prefix'] . 'background-repeat' => array(
			'title'			=> 'Repeat',
			'hide-title'	=> true,
			'size'			=> 'span2',
			'stack'			=> 'vertical-end',
			'data-input-type'    => 'select-box',
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'data-target'	=> $args['target'],
			'default'		=> 'repeat',
			'select-box-values' => array(
				'repeat' 	=> 'Repeat both',
				'repeat-x' 	=> 'Repeat horizontal',
				'repeat-y' 	=> 'Repeat vertical',
				'no-repeat' => 'No Repeat',
			),
		),
	);
	// remove style class for content or change for container
	if($args['target'] == '.container') {
		$options['has-media'] = 'containerStyles,background-image';
		$options['style-class'] = 'ov-container-bg-type-img bg-img-upload';
	} else if($args['target'] == '.column-content') {
		$options['style-class'] = 'bg-img-upload';
	}
} else if($args['type'] == 'background-video') {
	$options = array(
		'title'		   => 'Background Video',
		'hide-title'   => true,
		'break'		   => '1,1,1,2',
		'style-class'	=> 'ov-bg-type-vid',
		$args['prefix'] . 'bg_video' => array(
			'title'			=> 'Video Upload',
			'hide-title'	=> true,
			'size'			=> 'span4',
			'data-input-type' => 'video-upload',
			'default'		=> '',
			'class'			=> 'editor-listen',
			'data-handler'  => 'backgroundVideo',
			'data-upload'	=> 'bgVideo',
			'help'			=> 'Please note that in order to make autoplay work, your video will be muted.',
		),
		$args['prefix'] . 'bg_video_url' => array(
			'data-input-type'	=> 'input-text',
			'title'		 	=> 'or use external video',
			'help'			=> 'If your video is too big to upload into the WordPress media library or you want to include a video from an external source (like a CDN), you can paste the link here. Please use .mp4 format.',
			'size'		 	=> 'span4',
			'placeholder'	=> 'http://my.cdn.com/video.mp4',
			'default'		=> '',
			'class'			=> 'editor-listen',
			'data-handler'  => 'backgroundVideo',
		),
		$args['prefix'] . 'bg_force_autoplay' => array(
			'data-input-type' 			=> 'switch',
			'switch-type'				=> 'twoway',
			'title'		 				=> 'Force Autoplay on Mobile',
			'help'						=> 'Enabling this option will force autoplay on mobile devices instead of displaying a fallback image. Please note that not all browsers support autoplay and there will be no fallback image for older browsers.',
			'size'		 				=> 'span4',
			'class'						=> 'editor-listen',
			'default' 	 				=> 'disabled',
			'data-handler'  			=> 'backgroundVideo',
			'switch-values' => array(
				'disabled'	=> 'Disabled',
				'enabled'  	=> 'Enabled',
			),
		),
		$args['prefix'] . 'bg_video_fallback' => array(
			'title'			=> 'Fallback Image',
			'help'			=> 'This fallback image will be displayed on mobile devices instead of your video and it will be a placeholder in the editor.',
			'size'			=> 'span2',
			'data-input-type'	=> 'admin-image-upload',
			'data-target'	=> '.background-video',
			'default'		=> '',
			'class'			=> 'editor-listen',
			'data-handler'  => 'backgroundVideo',
			'data-upload'	=> 'bgVideoFallback',
			'style-class'   => 'ce-upload-small hide-unsplash'
		),
		$args['prefix'] . 'bg_video_opacity' => array(
			'title'			=> 'Video Opacity',
			'size'			=> 'span2',
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> '.background-video',
			'default'		=> 100,
			'min'			=> 0,
			'max'			=> 100,
			'class'			=> 'editor-listen',
			'data-handler'  => 'backgroundVideo',
			'data-divider'  => 100,
			'data-range-slider' => 'bgVideoOpacity',
		),
	);
	// remove style class for content or change for container
	if($args['target'] == '.container') {
		$options['style-class'] = 'ov-container-bg-type-vid';
	} 
} else if($args['type'] == 'border') {
	$options = array(
		'title' => 'Border',
		'break'	=> false,
		'style-class' => 'ep-collapsed',
		$args['prefix'] . 'border-color' => array(
			'title'			=> 'Color',
			'size'			=> 'span1',
			'data-input-type' 	=> 'color',
			'data-target'	=> $args['target'],
			'default'		=> '#000000',
			'class'			=> 'color-picker admin-listen-handler',
			'data-handler'  => 'colorPicker',
			'data-picker'	=> 'style',
			'responsive'	=> true,
		),
		$args['prefix'] . 'border-width' => array(
			'title'			=> 'Width',
			'size'			=> 'span1',
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> '0',
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'=> true,	
			'data-range-slider' => 'style',
		),
		$args['prefix'] . 'border-style' => array(
			'title'		 => 'Style',
			'size'		 => 'span1',
			'data-input-type' => 'switch',
			'switch-type'=> 'icon-select',
			'class' 	 		=> 'editor-listen',
			'data-handler' 		=> 'default',
			'default'		=> 'solid',
			'data-target'   => $args['target'],
			'tooltips'	 => array(
				'solid'		=> 'Solid',
				'dashed' 	=> 'Dashed',
				'dotted'	=> 'Dotted',
			),
			'switch-values' => array(
				'solid'		=> 'Solid',
				'dashed' 	=> 'Dashed',
				'dotted'	=> 'Dotted',
			),
			'responsive'	=> true,
		),
		$args['prefix'] . 'border-radius' => array(
			'title'			=> 'Radius',
			'size'			=> 'span1',
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> '0',
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'default',
			'responsive'	=> true,
			'data-has-unit'=> true,	
			'data-range-slider' => 'style',
			'data-supported-units' => 'rem,%'
		),
	);
} else if($args['type'] == 'box-shadow') {
	$options = array(
		'title' => 'Drop Shadow',
		'break'	=> '4,2',
		'class' => 'ep-styles-box-shadow',
		'style-class' => 'ep-collapsed',
		$args['prefix'] . 'box-shadow-color' => array(
			'title'			=> 'Color',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'color',
			'data-target'	=> $args['target'],
			'default'		=> '#000000',
			'class'			=> 'color-picker admin-listen-handler',
			'data-handler'  => 'colorPicker',
			'responsive'	=> true,
			'data-picker'	=> 'style',
		),
		$args['prefix'] . 'box-shadow-h-length' => array(
			'title'			=> 'H Length',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'boxShadow',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'boxShadow',
		),
		$args['prefix'] . 'box-shadow-v-length' => array(
			'title'			=> 'V Length',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'boxShadow',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'boxShadow',
		),
		$args['prefix'] . 'box-shadow-blur-radius' => array(
			'title'			=> 'Blur',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'boxShadow',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'data-range-slider' => 'boxShadow',
		),
		$args['prefix'] . 'box-shadow-spread-radius' => array(
			'title'			=> 'Spread',
			'size'			=> 'span1',
			'offset'		=> 'offset1',
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'default'		=> 0,
			'min'			=> 0,
			'max'			=> 999,
			'class'			=> 'editor-listen',
			'data-handler'  => 'boxShadow',
			'responsive'	=> true,
			'data-has-unit'	=> true,
			'help'  => 'This option only applies to box shadows, not text shadows.',
			'data-range-slider' => 'boxShadow',
		),
		$args['prefix'] . 'box-shadow-opacity' => array(
			'title'			=> 'Opacity',
			'size'			=> 'span1',
			'offset'		=> false,
			'data-input-type' 	=> 'range-slider',
			'data-target'	=> $args['target'],
			'min'			=> 0,
			'max'			=> 100,
			'default'		=> 100,
			'class'			=> 'editor-listen',
			'data-handler'  => 'boxShadow',
			'responsive'	=> true,
			'data-range-slider' => 'boxShadow',
		),
	);
}